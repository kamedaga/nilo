
flow {
    start: MainMenu
}

timeline MainMenu {
    font: "japanese"
    VStack(style: {width: 100ww, background: "#0a0e27", padding: [40, 20]}) {
        VStack(style: {
            align: "center", 
            gap: 8px, 
            padding: [60, 20, 40, 20]
        }) {
            Text("Modern Nilo", style: {
                font_size: 56px, 
                color: "#ffffff", 
                shadow: {blur: 20, offset: [0, 4], color: "#00d4ff88"}
            })
            Spacing(8px)
            Text("Niloと創る新しいUIは完璧ニロ！！！{}", state.name , style: {
                font_size: 28px, 
                color: "#a4f0ffff",
            })
        }
        
        
        if window.width > 400 {
            HStack(style: {width: 100%, gap: 20px, padding: [0, 40], align: "center"}) {
                SimpleUICard()
                LikeRustCard()
                minimalUICard()
            }
        } else {
            VStack(style: {width: 100%, gap: 20px, padding: [0, 40], align: "center"}) {
                SimpleUICard(style: {width: 90%})
                LikeRustCard(style: {width: 90%})
                minimalUICard(style: {width: 90%})
            }
        }
        
        Spacing(32px)
        
        VStack(style: {align: "center", gap: 12px}) {
            Text("Niloと作る建設的な未来", style: {font_size: 40px, color: "#ffffff", shadow: {blur: 12, offset: [0, 2], color: "#00000066"}})
            Text("Niloでの開発を支援するツールたち。", style: {font_size: 22px, color: "#a0a0a0"})
        }
        
        VStack(style: {width: 100%, gap: 16px, padding: [0, 40]}) {
            HotreloadCard()
            LintCard()
        }
        Spacing(32px)
        VStack(style: {align: "center", gap: 12px}) {
            Text("クロスプラットフォーム対応は当たり前です。", style: {font_size: 32px, color: "#a4f0ffff"})
        }
        
        CrossPlatformCard()
        
        Spacing(32px)

        VStack(style: {align: "center", gap: 12px}) {
            Text("モダンな開発の鍵には、Stencilがあります。", style: {font_size: 40px, color: "#ffffff", shadow: {blur: 12, offset: [0, 2], color: "#00000066"}})
        }
        
        StencilCard()
        
    }
}

component SimpleUICard(style: {width: 30%}) {
    VStack(style: {
        height: 200px, 
        background: "#1a2332", 
        rounded: 12px, 
        padding: 24px,
        shadow: {blur: 16, offset: [0, 8], color: "#00000040"},
        align: "center"
    }) {
        Text("✨", style: {
            font_size: 48px
        })
        Spacing(12px)
        Text("シンプルで宣言的", style: {max_width: auto, font_size: 22px, color: "#ffffff", shadow: {blur: 4, offset: [0, 1], color: "#00000030"}})
        Spacing(8px)
        Text("直感的な構文でUIを記述", style: {max_width: auto, font_size: 14px, color: "#8899aa"})
    }
}

component LikeRustCard(style: {width: 30%}) {
    VStack(style: {
        height: 200px, 
        background: "#1a2332", 
        rounded: 12px, 
        padding: 24px,
        shadow: {blur: 16, offset: [0, 8], color: "#00000040"},
        align: "center"
    }) {
        Text("🦀", style: {
            font_size: 48px,
        })
        Spacing(12px)
        Text("Rustとの連携も簡単", style: {
            max_width: auto, 
            font_size: 22px, 
            color: "#ffffff", 
            shadow: {blur: 4, offset: [0, 1], color: "#00000030"},
        })
        Spacing(8px)
        Text("型安全でパワフルな統合", style: {max_width: auto, font_size: 14px, color: "#8899aa"})
    }
}

component minimalUICard(style: {width: 30%}) {
    VStack(style: {
        height: 200px, 
        background: "#1a2332", 
        rounded: 12px, 
        padding: 24px,
        shadow: {blur: 16, offset: [0, 8], color: "#00000040"},
        align: "center"
    }) {
        Text("⚡", style: {
            font_size: 48px,
        })
        Spacing(12px)
        Text("簡潔な動的UI", style: {
            max_width: auto, 
            font_size: 22px, 
            color: "#ffffff", 
            shadow: {blur: 4, offset: [0, 1], color: "#00000030"},
        })
        Spacing(8px)
        Text("状態管理も直感的に", style: {max_width: auto, font_size: 14px, color: "#8899aa"})
    }
}

component HotreloadCard() {
    VStack(style: {
        width: 100%, 
        rounded: 16px, 
        background: "#1a2332",
        padding: 32px,
        shadow: {blur: 20, offset: [0, 10], color: "#00000050"}
    }) {
        HStack(style: {spacing: 16px, align: "center"}) {
            Text("🔥", style: {font_size: 40px})
            VStack(style: {spacing: 8px}) {
                Text("ホットリロード対応", style: {font_size: 32px, color: "#a4f0ffff", shadow: {blur: 4, offset: [0, 1], color: "#00000030"}})
                Text("始め方は簡単。cargo run -- --hotreloadと入力するだけ。", style: {font_size: 18px, color: "#b0b0b0"})
            }
        }
    }
} 

component LintCard() {
    VStack(style: {
        width: 100%, 
        rounded: 16px, 
        background: "#1a2332",
        padding: 32px,
        shadow: {blur: 20, offset: [0, 10], color: "#00000050"}
    }) {
        HStack(style: {spacing: 16px, align: "center"}) {
            Text("🔍", style: {font_size: 40px})
            VStack(style: {spacing: 8px}) {
                Text("Lintツールを標準搭載", style: {font_size: 32px, color: "#a4f0ffff", shadow: {blur: 4, offset: [0, 1], color: "#00000030"}})
                Text("cargo run で自動起動。niloファイルの異常を検出します。", style: {font_size: 18px, color: "#b0b0b0"})
            }
        }
    }
}

component CrossPlatformCard() {
    VStack(style: {
        width: 100%, 
        rounded: 16px, 
        background: "#1a2332",
        padding: 40px,
        shadow: {blur: 20, offset: [0, 10], color: "#00000050"},
        spacing: 20px
    }) {
        VStack(style: {spacing: 12px}) {
            Text("🖥️ wgpuを用いたネイティブビルドのサポート", style: {font_size: 26px, color: "#ffffff", shadow: {blur: 4, offset: [0, 1], color: "#00000030"}})
            VStack(style: {gap: 24px, padding: [8, 0, 0, 24]}) {
                Text(" Windows向けのビルドを完全に対応", style: {font_size: 20px, color: "#a4f0ffff"})
                Text(" Macによるビルドも完全に対応", style: {font_size: 20px, color: "#a4f0ffff"})
                Text(" Linuxによるビルドをベータ版として対応", style: {font_size: 20px, color: "#a4f0ffff"})
            }
        }
        
        VStack(style: {spacing: 12px}) {
            Text("🌐 DOMを用いたWebビルドのサポート", style: {font_size: 26px, color: "#ffffff", shadow: {blur: 4, offset: [0, 1], color: "#00000030"}})
            VStack(style: {spacing: 8px, padding: [8, 0, 0, 24]}) {
                Text("✅ Web向けのビルドを完全に対応", style: {font_size: 20px, color: "#a4f0ffff"})
            }
        }
    }
}

component StencilCard() {
    VStack(style: {
        width: 100%, 
        rounded: 16px, 
        background: "#1a2332",
        padding: 40px,
        shadow: {blur: 20, offset: [0, 10], color: "#00000050"},
        spacing: 16px,
        align: "center"
    }) {
        Text("🎨", style: {font_size: 56px})
        Spacing(8px)
        Text("Stencil - 抽象化レイヤー", style: {font_size: 36px, color: "#ffffff", shadow: {blur: 4, offset: [0, 1], color: "#00000030"}})
        Text("Niloでは、Stencilという低レベルな層を挟むことによって、\n複数のレンダラで描画することや、モダンなUIをシンプルに構築できます。", style: {max_width: auto, font_size: 22px, color: "#b0b0b0", align: "center"})
        Spacing(24px)
        
        HStack(style: {gap: 16px, align: "center"}) {
            Button(id: "test_object1", label: "無名構造体テスト", onclick: create_user({ name: "Alice", age: 30, active: true }), style: {
                background: "#0066cc",
                color: "#ffffff",
                padding: [12, 24],
                rounded: 8px,
                font_size: 18px
            })
            
            Button(id: "test_object2", label: "rust_call構文", onclick: create_user!({ name: "Bob", age: 25, active: false }), style: {
                background: "#cc6600",
                color: "#ffffff",
                padding: [12, 24],
                rounded: 8px,
                font_size: 18px
            })
        }
    }
}
