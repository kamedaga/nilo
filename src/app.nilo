flow {
    start: UserForm
    CheckDimensions -> [CheckDimensions]
}

timeline CheckDimensions {
    test!()
}

timeline UserForm {
    VStack(style: {
        width: 90vw,
        max_width: 600px,
        padding: 2rem,
        background: "#ffffff",
        rounded: 1rem,
        shadow: true,
        align: "center"
    }) {
        Text("ユーザー登録", style: {
            font_size: 2rem,
            font_weight: "bold",
            margin_bottom: 2rem,
            color: "#343a40"
        })

        VStack(style: { gap: 1.5rem, width: 100% }) {
            VStack(style: { gap: 0.5rem, width: 100% }) {
                Text("ユーザー名", style: {
                    font_weight: "bold",
                    color: "#495057",
                    text_align: "left",
                    width: 100%
                })
                TextInput(state.username, style: {
                    width: 100%,
                    padding: 0.8rem,
                    border: "1px solid #ced4da",
                    rounded: 0.5rem,
                    font_size: 1rem
                })
            }

            VStack(style: { gap: 0.5rem, width: 100% }) {
                Text("メールアドレス", style: {
                    font_weight: "bold",
                    color: "#495057",
                    text_align: "left",
                    width: 100%
                })
                TextInput(state.email, style: {
                    width: 100%,
                    padding: 0.8rem,
                    border: "1px solid #ced4da",
                    rounded: 0.5rem,
                    font_size: 1rem
                })
            }

            VStack(style: { gap: 0.5rem, width: 100% }) {
                Text("パスワード", style: {
                    font_weight: "bold",
                    color: "#495057",
                    text_align: "left",
                    width: 100%
                })
                TextInput(state.password, style: {
                    width: 100%,
                    padding: 0.8rem,
                    border: "1px solid #ced4da",
                    rounded: 0.5rem,
                    font_size: 1rem
                })
            }
        }

        Spacing(2rem)

        HStack(style: { gap: 1rem, width: 100%, justify_content: "center" }) {
            Button(
                id: submit_btn,
                label: "登録",
                onclick: register_user!(),
                style: {
                    background: "#28a745",
                    color: "white",
                    padding: "0.8rem 2rem",
                    rounded: 0.5rem,
                    font_size: 1rem,
                    font_weight: "bold"
                }
            )

            Button(
                id: cancel_btn,
                label: "キャンセル",
                style: {
                    background: "#6c757d",
                    color: "white",
                    padding: "0.8rem 2rem",
                    rounded: 0.5rem,
                    font_size: 1rem
                }
            )
        }

        if state.validation_error {
            Text(state.error_message, style: {
                color: "#dc3545",
                font_size: 0.9rem,
                margin_top: 1rem,
                text_align: "center"
            })
        }
    }

    when user.click(cancel_btn) {
        navigate_to(MainMenu)
    }
}